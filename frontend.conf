# This is the backend site/application we are protecting with OpenID Connect
upstream my_backend {
    zone my_frontend_site 64k;
    server 10.0.0.1:80;
}

# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr - $jwt_claim_sub [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include conf.d/openid_connect.server_conf; # Authorization code flow and Relying Party processing
    error_log /var/log/nginx/error.log debug;  # Reduce severity level as required

    listen 8010; # Use SSL/TLS in production

    location / {
        # This site can be either directly protected with OpenID Connect or
        # shown with just a landing page without login.

        # Disable when you need to show a default landing page before login.
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;
        auth_jwt_key_file $oidc_jwt_keyfile;  # Enable when using filename
        #auth_jwt_key_request /_jwks_uri;     # Enable when using URL

        # Successfully authenticated users are proxied to the backend site/app
        # with 'sub' claim passed as HTTP header. It is empty before login.
        proxy_set_header userid $jwt_claim_sub;

        # The 'access_token' is set in the OIDC flow. Otherwise, it is empty.
        proxy_set_header Authorization "Bearer $access_token";

        proxy_pass http://my_backend; # The frontend landing page
        access_log /var/log/nginx/access.log main_jwt;
    }

    location = /login {
        # This location can be called by SPA to start OIDC flow via login button
        # after starting a landing page without login.
        auth_jwt "" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        #auth_jwt_key_file $oidc_jwt_keyfile; # Enable when using filename
        auth_jwt_key_request /_jwks_uri;      # Enable when using URL

        # Redirect to the the landing page after successful login to AS.
        js_content oidc.redirectPostLogin;
        access_log /var/log/nginx/access.log main_jwt;
    }
}

# vim: syntax=nginx
