# OpenID Connect configuration
#
# Each map block allows multiple values so that multiple IdPs can be supported,
# the $host variable is used as the default input parameter but can be changed.
#
map $host $idp_domain {
    default 'dev-s4i2bm4p.us.auth0.com'; #'{{Your-IDP-Domain}}';
}

map $host $oidc_authz_endpoint {
    default https://$idp_domain/authorize;
}

map $host $oidc_token_endpoint {
    default https://$idp_domain/oauth/token;
}

map $host $oidc_jwt_keyfile {
    default https://$idp_domain/.well-known/jwks.json;
}

map $host $oidc_logout_endpoint {
    default https://$idp_domain/v2/logout;
}

map $host $oidc_userinfo_endpoint {
    default https://$idp_domain/userinfo;
}

map $host $oidc_client {
    default '1WqWFmHKqHLIL3RKhqiI5IkVtxP2K3Zx'; #"{{Your-IDP-Client-ID}}";
}

#
# create the following file with `map $host $oidc_client_secret`.
#
# include "conf.d/oidc_credentials.conf";
map $host $oidc_client_secret {
    default "{{Your-IDP-Client-Secret}}"; 
}

map $host $oidc_pkce_enable {
    default 1;
}

map $host $oidc_scopes {
    default "openid+profile+email+offline_access";
}

map $host $oidc_logout_redirect {
    # Where to send browser after requesting /logout location. This can be
    # replaced with a custom logout page, or complete URL.
    default "/_logout"; # Built-in, simple logout page
}

map $host $post_logout_return_uri {
    default $redirect_base;
}

map $host $oidc_hmac_key {
    # This should be unique for every NGINX instance/cluster
    default "ChangeMe";
}

map $host $zone_sync_leeway {
    # Specifies the maximum timeout for synchronizing ID tokens between cluster
    # nodes when you use shared memory zone content sync. This option is only
    # recommended for scenarios where cluster nodes can randomly process
    # requests from user agents and there may be a situation where node "A"
    # successfully received a token, and node "B" receives the next request in
    # less than zone_sync_interval.
    default 0; # Time in milliseconds, e.g. (zone_sync_interval * 2 * 1000)
}

map $proto $oidc_cookie_flags {
    http  "Path=/; SameSite=lax;"; # For HTTP/plaintext testing
    https "Path=/; SameSite=lax; HttpOnly; Secure;"; # Production recommendation
}

map $http_x_forwarded_port $redirect_base {
    ""      $proto://$host:$server_port;
    default $proto://$host:$http_x_forwarded_port;
}

map $http_x_forwarded_proto $proto {
    ""      $scheme;
    default $http_x_forwarded_proto;
}

map $host $return_token_to_client_on_login {
    # This is to return token as a query param to the app after successful login.
    # +------------+-----------------------------------------------------------+
    # | options    | example                                                   |
    # +------------+-----------------------------------------------------------+
    # | id_token   | http://my-nginx.example.com/login?id_token=sdfsdfdsfs     |
    # | none or "" | http://my-nginx.example.com  (no query param)             |
    # +------------+-----------------------------------------------------------+
    default "";
}

map $host $oidc_logout_path_params_enable {
    default 0;
}

map $host $oidc_logout_path_params {
    default "";
}

map $host $oidc_logout_query_params_enable {
    default 1; # 0: OIDC RP-initiated logout, 1: custom logout
}

map $host $oidc_logout_query_params {
    default '{
        "client_id": "$oidc_client",
        "returnTo" : "$redirect_base/_logout"
    }';
}

# ADVANCED CONFIGURATION BELOW THIS LINE
# Additional advanced configuration (server context) in openid_connect.server_conf

# JWK Set will be fetched from $oidc_jwks_uri and cached here - ensure writable by nginx user
proxy_cache_path /var/cache/nginx/jwk levels=1 keys_zone=jwk:64k max_size=1m;

# Change timeout values to at least the validity period of each token type
keyval_zone zone=oidc_id_tokens:1M state=conf.d/oidc_id_tokens.json timeout=1h;
keyval_zone zone=oidc_access_tokens:1M   state=conf.d/oidc_access_tokens.json  timeout=1h;
keyval_zone zone=refresh_tokens:1M state=conf.d/refresh_tokens.json timeout=8h;
keyval_zone zone=oidc_pkce:128K timeout=90s; # Temporary storage for PKCE code verifier.

keyval $cookie_auth_token $session_jwt zone=oidc_id_tokens;   # Exchange cookie for JWT
keyval $cookie_auth_token $access_token zone=oidc_access_tokens; # Exchange cookie for refresh token
keyval $cookie_auth_token $refresh_token zone=refresh_tokens; # Exchange cookie for refresh token
keyval $request_id $new_session zone=oidc_id_tokens; # For initial session creation
keyval $request_id $new_access_token zone=oidc_access_tokens; # For initial session creation
keyval $request_id $new_refresh zone=refresh_tokens; # ''
keyval $pkce_id $pkce_code_verifier zone=oidc_pkce;

auth_jwt_claim_set $jwt_audience aud; # In case aud is an array
js_import oidc from conf.d/openid_connect.js;

# vim: syntax=nginx
